<?xml version="1.0" encoding="UTF-8"?>
<project name="${project.name}">
    <!-- Using file with properties -->

    <property file="build.properties"/>

    <!-- Compiles all .java files in src directory -->

    <target name="compile">
        <mkdir dir="${compiled.dir}"/>
        <javac destdir="${compiled.dir}" includeantruntime="false">
            <src path="src"/>
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- Builds the project and packs it into a JAR archive -->

    <target name="build" depends="compile">
        <mkdir dir="${production.dir}"/>
        <jar basedir="${compiled.dir}" jarfile="${production.dir}/${project.name}.jar">
            <manifest>
                <attribute name="main" value="${main.class}"/>
                <attribute name="package-version" value="${project.version}"/>
            </manifest>
        </jar>
    </target>

    <!-- Wipes out all .class and temporary files -->

    <target name="clean">
        <delete>
            <fileset dir="${compiled.dir}">
                <include name="**/*.class"/>
            </fileset>
        </delete>
        <delete>
            <fileset dir="${temporary.dir}">
                <include name="**/*"/>
            </fileset>
        </delete>
    </target>

    <!-- Launches JUnit-tests and builds the project beforehand -->

    <target name="test">
        <junit printsummary="on" haltonfailure="yes">
            <classpath>
                <pathelement location="out/compiled/"/>
                <pathelement location="lib/junit-4.12.jar"/>
            </classpath>
            <batchtest>
                <fileset dir="src/test">
                    <include name="**/*Test*"/>
                </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
    </target>

    <path id="test.classpath">
        <!-- The location where you have your compiled classes -->
        <pathelement location="${compiled.dir}/model"/>
    </path>
    <!-- Plays music after built the project -->
    <target name="music">
        <sound>
            <success source="sound.wav"/>
        </sound>
        <echo message="Music done"/>
    </target>

    <target name="alt" >

        <replaceregexp file="build.properties" match="main.src.dir=src" replace="main.src.dir=alt_src" />
        <replaceregexp file="build.properties" match="main.build.dir=build/main" replace="main.build.dir=${production.dir}/main_alt" />
        <replaceregexp file="build.properties" match="jar.build.dir=build/jar" replace="jar.build.dir=${production.dir}/jar_alt" />

        <copy todir="${src}">
            <fileset dir="src"/>
        </copy>

        <antcall target="build" />

        <replaceregexp file="build.properties" match="main.src.dir=(.)*" replace="main.src.dir=src" />
        <replaceregexp file="build.properties" match="main.build.dir=(.)*" replace="main.build.dir=${production.dir}/main"/>
        <replaceregexp file="build.properties" match="jar.build.dir=(.)*" replace="jar.build.dir=${production.dir}/jar"  />

        <copy todir="${src}_old">
            <fileset dir="src"/>
        </copy>

        <replaceregexp file="${src}/model/Point.java" match="Point" replace="POOINT" byline="true" />
        <replaceregexp file="${src}/model/Validator.java" match="isInArea" replace="inArea" byline="true"/>
        <replaceregexp file="${src}/beans/DataBean.java" match="Unlock" replace="ANLOCK" byline="true"/>

        <move file="${src}/model/Point.java" tofile="${src}/model/POOINT.java" />

        <antcall target="build" />
    </target>
</project>

