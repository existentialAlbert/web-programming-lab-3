<?xml version="1.0" encoding="UTF-8"?>
<project name="${project.name}">
    <!-- Using file with properties -->

    <property file="build.properties"/>

    <!-- Compiles all .java files in src directory -->

    <target name="compile">
        <mkdir dir="${compiled.dir}"/>
        <javac destdir="${compiled.dir}" includeantruntime="false">
            <src path="src"/>
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- Builds the project and packs it into a JAR archive -->

    <target name="build" depends="compile">
        <mkdir dir="${production.dir}"/>
        <jar basedir="${compiled.dir}" jarfile="${production.dir}/${project.name}.jar">
            <manifest>
                <attribute name="title" value="${project.name}"/>
                <attribute name="package-version" value="${project.version}"/>
            </manifest>
        </jar>
    </target>

    <target name="war" depends="compile">
        <war destfile="${production.dir}/lab3333.war" webxml="${web.info}/web.xml">
            <classes dir="${src}"/>
            <fileset dir="${web}"/>
        </war>
    </target>


    <!-- Wipes out all .class and temporary files -->

    <target name="clean">
        <delete>
            <fileset dir="${compiled.dir}">
                <include name="**/*.class"/>
            </fileset>
        </delete>
        <delete>
            <fileset dir="${temporary.dir}">
                <include name="**/*"/>
            </fileset>
        </delete>
    </target>

    <!-- Launches JUnit-tests and builds the project beforehand -->

    <target name="test" depends="build" description="Compiles and launches tests">
        <junit fork="true">
            <classpath>
                <pathelement location="${lib.dir}/junit-4.12.jar"/>
                <pathelement location="${lib.dir}/hamcrest-core-1.3.jar"/>
                <pathelement location="${compiled.logic}"/>
                <pathelement location="${test.dir}"/>
            </classpath>
            <test name="test.ValidatorTest">
                <formatter type="plain" usefile="false"/>
            </test>
        </junit>
    </target>


    <!-- Plays music after built the project -->
    <target name="music">
        <sound>
            <success source="sound.wav"/>
        </sound>
        <echo message="Music done"/>
    </target>

    <target name="alt" >

        <copy todir="${src}_old">
            <fileset dir="src"/>
        </copy>

        <replaceregexp file="${src}/model/Point.java" match="Point" replace="POOINT" byline="true" />
        <replaceregexp file="${src}/model/Validator.java" match="isInArea" replace="inArea" byline="true"/>
        <replaceregexp file="${src}/beans/DataBean.java" match="Unlock" replace="ANLOCK" byline="true"/>

        <move file="${src}/model/Point.java" tofile="${src}/model/POOINT.java" />

        <antcall target="build" />
    </target>
</project>

